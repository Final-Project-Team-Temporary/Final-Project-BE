name: CI-CD Pipeline

on:
  push:
    branches: [ develop ]

jobs:
  # 1. 빌드·테스트·이미지 푸시
  build:
    runs-on: ubuntu-latest
    environment: DOCKERHUB_USERNAME

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'   # AdoptOpenJDK 기반의 Temurin 배포판
          java-version: '17'        # 설치할 Java 버전
          cache: 'gradle'           # Gradle 의존성 캐시 활성화 (선택)


      - name: Build (no Test)
        run: ./gradlew clean bootJar --no-daemon

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN:    ${{ secrets.DOCKERHUB_TOKEN }}
          IMAGE_TAG:          ${{ github.sha }}
        run: |
          # IMAGE_TAG, DOCKERHUB_USERNAME 변수를 사용
          docker build \
            -t $DOCKERHUB_USERNAME/econoeasy-be:$IMAGE_TAG \
            .
          docker push \
            $DOCKERHUB_USERNAME/econoeasy-be:$IMAGE_TAG

  # 2. 빌드 성공 후 배포
  deploy:
    environment: DOCKERHUB_USERNAME
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2 via SSH
        env:
          IMAGE_TAG: ${{ github.sha }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST <<EOF
            cd /home/$SSH_USER/econoeasy
            # 환경변수 내보내기
            export DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME
            export IMAGE_TAG=$IMAGE_TAG
            # 방금 빌드·푸시된 SHA 태그 이미지를 명시적으로 내려받습니다.
            docker pull $DOCKERHUB_USERNAME/econoeasy-be:$IMAGE_TAG
            # 도커 컴포즈로 컨테이너를 재시작
            docker-compose down
            docker-compose up -d
          EOF